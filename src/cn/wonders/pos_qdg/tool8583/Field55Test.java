package cn.wonders.pos_qdg.tool8583;

public class Field55Test {

	private static final String LINE_SP = System.getProperty("line.separator");
	// 测试报文55域
	public static final byte[] BYTES = new byte[] {
		(byte) 0x9F,
		0x10,
		0x08,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		(byte) 0x9A,
		0x03,
		0x11,
		0x12,
		0x08, //
		(byte) 0x9C, 0x01,
		0x00,
		(byte) 0x9F,
		0x02,
		0x06,
		0x00,
		0x00,
		0x00,
		0x10,
		0x00,
		0x00,
		0x5F,
		0x2A,
		0x02,
		0x01, //
		0x11, 0x71, (byte) 0x81,
		(byte) 0xC8,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00,
		0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00,
		0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, //
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00 };

	// 获取55域中的TAG
	private static byte[] getTag(int index, byte[] source) {
		byte tag1 = source[index];
		if ((tag1 & 0x1f) == 0x1f) {
			return new byte[] { source[index], source[index + 1] };
		} else {
			return new byte[] { source[index] };
		}
	}

	// 获取域名中得TAG长度
	private static byte[] getLen(int index, byte[] source) {
		byte len1 = source[index];
		if ((len1 & 0x80) == 0x00) {
			return new byte[] { source[index] };
		} else {
			byte len2 = (byte) (len1 & 0x7f);
			len2++;
			byte[] len = new byte[len2];
			System.arraycopy(source, index, len, 0, len2);
			return len;
		}
	}

	// 获取55域中得TAG值
	private static byte[] getValue(int index, byte[] source, int len) {
		byte[] value = new byte[len];
		System.arraycopy(source, index, value, 0, len);
		return value;
	}

	static void printHex(byte[] bytes) {
		String info = "";
		for (int i = 0; i < bytes.length; i++) {
			String s = Integer.toHexString(bytes[i] < 0 ? bytes[i] + 256
					: bytes[i]);
			if (s.length() == 1) {
				s = "0" + s;
			}
			info += s;
			info += " ";
			if ((i + 1) % 16 == 0) {
				info += LINE_SP;
			}
		}
	}
}
